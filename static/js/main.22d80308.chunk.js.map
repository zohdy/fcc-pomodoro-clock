{"version":3,"sources":["TimerLengthSettings.js","Timer.js","TimerControl.js","App.js","index.js"],"names":["TimerLengthSettings","_ref","titleID","title","decrementID","changeLength","lengthID","length","incrementID","lengthType","react_default","a","createElement","className","id","onClick","length-type","operator","index_es","icon","faArrowDown","faArrowUp","Timer","alarmColor","timerType","timeLeft","style","minutes","Math","floor","seconds","clockify","TimerControl","timerControl","reset","isTimerRunning","faPause","faPlay","faRedo","App","state","breakLength","sessionLength","intervalID","e","_this$setState","currentTarget","getAttribute","stateToChange","lengthToChange","_this","setState","Object","defineProperty","_this$setState2","clearInterval","beginCountDown","setInterval","switchTimer","playAlarmSound","_this$state","time","audioBeep","play","pause","currentTime","_this2","this","_this$state2","src_TimerLengthSettings_0","src_Timer_0","src_TimerControl_0","preload","src","ref","audio","Component","ReactDOM","render","App_App","document","getElementById"],"mappings":"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","file":"static/js/main.22d80308.chunk.js","sourcesContent":["import React from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faArrowDown } from \"@fortawesome/free-solid-svg-icons\";\nimport { faArrowUp } from \"@fortawesome/free-solid-svg-icons\";\nimport \"./TimerLengthSettings.css\";\n\nconst TimerLengthSettings = ({\n  titleID,\n  title,\n  decrementID,\n  changeLength,\n  lengthID,\n  length,\n  incrementID,\n  lengthType\n}) => {\n  return (\n    <div className=\"TimerLengthSettings\">\n      <div className=\"TimerLengthSettings-title\" id={titleID}>\n        {title}\n      </div>\n      <div className=\"TimerLengthSettings-wrapper\">\n        <button\n          id={decrementID}\n          onClick={changeLength}\n          length-type={lengthType}\n          operator={\"-\"}\n        >\n          <FontAwesomeIcon\n            icon={faArrowDown}\n            className=\"TimerLengthSettings-arrow\"\n          />\n        </button>\n        <span className=\"TimerLengthSettings-display\" id={lengthID}>\n          {length}\n        </span>\n        <button\n          id={incrementID}\n          onClick={changeLength}\n          operator={\"+\"}\n          length-type={lengthType}\n        >\n          <FontAwesomeIcon\n            className=\"TimerLengthSettings-arrow\"\n            icon={faArrowUp}\n          />\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default TimerLengthSettings;\n","import React from \"react\";\nimport \"./Timer.css\";\n\nconst Timer = ({ alarmColor, timerType, timeLeft }) => {\n  const clockify = (timeLeft) => {\n    let minutes = Math.floor(timeLeft / 60);\n    let seconds = timeLeft - minutes * 60;\n    seconds = seconds < 10 ? \"0\" + seconds : seconds;\n    minutes = minutes < 10 ? \"0\" + minutes : minutes;\n    return minutes + \":\" + seconds;\n  };\n  return (\n    <div className=\"Timer\" style={alarmColor}>\n      <div className=\"Timer-wrapper\">\n        <span className=\"Timer-label\" id=\"timer-label\">\n          {timerType}\n        </span>\n        <span className=\"Timer-display\" id=\"time-left\">\n          {clockify(timeLeft)}\n        </span>\n      </div>\n    </div>\n  );\n};\n\nexport default Timer;\n","import React from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faPlay } from \"@fortawesome/free-solid-svg-icons\";\nimport { faPause } from \"@fortawesome/free-solid-svg-icons\";\nimport { faRedo } from \"@fortawesome/free-solid-svg-icons\";\nimport \"./TimerControl.css\";\n\nconst TimerControl = ({ timerControl, reset, isTimerRunning }) => {\n  return (\n    <div className=\"TimerControl\">\n      <button id=\"start_stop\" onClick={timerControl}>\n        <FontAwesomeIcon icon={!isTimerRunning ? faPlay : faPause} />\n      </button>\n      <button id=\"reset\" onClick={reset}>\n        <FontAwesomeIcon icon={faRedo} />\n      </button>\n    </div>\n  );\n};\n\nexport default TimerControl;\n","import React, { Component } from \"react\";\nimport TimerLengthSettings from \"./TimerLengthSettings\";\nimport Timer from \"./Timer\";\nimport TimerControl from \"./TimerControl\";\nimport \"./App.css\";\n\nexport default class App extends Component {\n  state = {\n    breakLength: 5,\n    sessionLength: 25,\n    isTimerRunning: false,\n    timerType: \"Session\",\n    timeLeft: 1500,\n    intervalID: \"\"\n  };\n\n  changeLength = (e) => {\n    let operator = e.currentTarget.getAttribute(\"operator\");\n    let stateToChange = e.currentTarget.getAttribute(\"length-type\");\n    let lengthToChange =\n      stateToChange === \"sessionLength\"\n        ? this.state.sessionLength\n        : this.state.breakLength;\n\n    if (operator === \"-\" && lengthToChange !== 1) {\n      this.setState({\n        [stateToChange]: lengthToChange - 1,\n        timeLeft: lengthToChange * 60 - 60\n      });\n    } else if (operator === \"+\" && lengthToChange !== 60) {\n      this.setState({\n        [stateToChange]: lengthToChange + 1,\n        timeLeft: lengthToChange * 60 + 60\n      });\n    }\n  };\n\n  timerControl = () => {\n    if (!this.state.isTimerRunning) {\n      this.beginCountDown();\n      this.setState({ isTimerRunning: true });\n    } else {\n      this.setState({ isTimerRunning: false });\n      clearInterval(this.state.intervalID);\n    }\n  };\n\n  beginCountDown = () => {\n    this.setState({\n      intervalID: setInterval(() => {\n        this.setState({ timeLeft: this.state.timeLeft - 1 });\n        this.switchTimer();\n        this.playAlarmSound(this.state.timeLeft);\n      }, 1000)\n    });\n  };\n\n  switchTimer = () => {\n    const {\n      timeLeft,\n      sessionLength,\n      breakLength,\n      intervalID,\n      timerType\n    } = this.state;\n    if (timeLeft < 0) {\n      if (timerType === \"Session\") {\n        clearInterval(intervalID);\n        this.beginCountDown();\n        this.setState({\n          timeLeft: breakLength * 60,\n          timerType: \"Break\"\n        });\n      } else {\n        clearInterval(intervalID);\n        this.beginCountDown();\n        this.setState({\n          timeLeft: sessionLength * 60,\n          timerType: \"Session\"\n        });\n      }\n    }\n  };\n\n  playAlarmSound = (time) => {\n    if (time === 0) {\n      this.audioBeep.play();\n    }\n  };\n\n  reset = () => {\n    this.setState({\n      breakLength: 5,\n      sessionLength: 25,\n      isTimerRunning: false,\n      timerType: \"Session\",\n      timeLeft: 1500,\n      intervalID: \"\"\n    });\n    clearInterval(this.state.intervalID);\n    this.audioBeep.pause();\n    this.audioBeep.currentTime = 0;\n  };\n  render() {\n    const {\n      breakLength,\n      sessionLength,\n      timerType,\n      alarmColor,\n      isTimerRunning,\n      timeLeft\n    } = this.state;\n    return (\n      <div className=\"App\">\n        <h1 className=\"title\">Pomodoro Clock</h1>\n        <div className=\"wrapper\">\n          <TimerLengthSettings\n            titleID=\"break-label\"\n            decrementID=\"break-decrement\"\n            incrementID=\"break-increment\"\n            lengthID=\"break-length\"\n            title=\"Break Length\"\n            changeLength={!isTimerRunning ? this.changeLength : null}\n            length={breakLength}\n            lengthType={\"breakLength\"}\n          />\n          <TimerLengthSettings\n            titleID=\"session-label\"\n            decrementID=\"session-decrement\"\n            incrementID=\"session-increment\"\n            lengthID=\"session-length\"\n            title=\"Session Length\"\n            changeLength={!isTimerRunning ? this.changeLength : null}\n            length={sessionLength}\n            lengthType={\"sessionLength\"}\n          />\n        </div>\n        <Timer\n          timerType={timerType}\n          alarmColor={alarmColor}\n          timeLeft={timeLeft}\n        />\n        <TimerControl\n          timerControl={this.timerControl}\n          reset={this.reset}\n          isTimerRunning={isTimerRunning}\n        />\n        <audio\n          id=\"beep\"\n          preload=\"auto\"\n          src=\"https://goo.gl/65cBl1\"\n          ref={(audio) => {\n            this.audioBeep = audio;\n          }}\n        />\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}